import {Flex, Spinner, Stack, Text} from '@chakra-ui/react';
import {OTPInput} from 'chakra-otp-input';
import {Button, Form} from 'ui-lib';
import React, {useEffect, useState} from 'react';
import {Popup} from '../../../../ui-lib';

export const TwoFaModal = ({TWO_FA_MODAL, siginBodyValues, mutation, forLogin}) => {
  const [code, setCode] = useState(null);
  useEffect(() => {
    code?.length == 6 && mutation.mutate({...siginBodyValues, code: code});
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [code]);
  return (
    <Popup
      hideOverlay={forLogin}
      minW="465px"
      minH="fit-content"
      pt="35px"
      maxW="465px"
      pb="35px"
      bg="#303030"
      // isOpen={TWO_FA_MODAL.isOpen}
      isOpen={true}
      overlayStyle={{
        bg: 'transparent',
      }}
      closeOnOverlayClick={false}
      hideCloseBtn={true}
      onClose={TWO_FA_MODAL.onClose}
      isCentered
      pl="31px"
      pr="22px"
      sx={{
        '.css-1xisyp4': {
          pointerEvent: 'none !important',
          background: 'red !important',
        },
      }}
      style={{background: 'red !important'}}
    >
      <Popup.Body my="0px">
        <Stack spacing="none">
          <Form.Header
            align="start"
            fontSize={'32px'}
            fontWeight={'600'}
            fontFamily={'Euclid Circular B'}
            color="#FFFFFF"
          >
            Two Factor Authentication
          </Form.Header>
          <Form.Description>
            <Text
              fontSize={'14px'}
              mt="12px"
              color="#FFFFFF"
              // fontFamily={'Proxima Nova'}
              w="full"
              fontWeight={'400'}
              align="left"
            >
              Enter the 6-digit verification code generated by your Authenticator app to proceed
            </Text>
          </Form.Description>

          <Flex pb="42px" pt="38px" px="1px" justify="center" align="center" w="full">
            <OTPInput
              color="#CBCBCB"
              type="number"
              fontSize={'35.621px'}
              fontWeight={'300'}
              w="full"
              bg="transparent"
              borderRadius="12px"
              border="1px solid #E4E4E4"
              h="55.658px"
              value={code}
              noInputs={6}
              onChange={value => setCode(value)}
            />
          </Flex>

          <Button
            // mx="auto"
            w="391px"
            justifySelf="start"
            isDisabled={code?.length !== 6}
            withoutLoader
            fontSize="18px"
            fontWeight="400"
            mt={0}
            onClick={() => mutation.mutate({...siginBodyValues})}
          >
            {mutation.isLoading ? <Spinner color="#191919" /> : 'Proceed'}
          </Button>
        </Stack>
      </Popup.Body>
    </Popup>
  );
};

export default TwoFaModal;
