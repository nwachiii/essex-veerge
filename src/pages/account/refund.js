import Head from 'next/head';
import {useMemo} from 'react';
import {useRouter} from 'next/router';
import {useTable} from 'react-table';
import totalPurchaseData from '../../constants/accounts/refundData.json';
import {
  faAngleLeft,
  faAngleRight,
  faDownload,
  faCaretDown,
} from '@fortawesome/free-solid-svg-icons';
import {FontAwesomeIcon} from '@fortawesome/react-fontawesome';
import {LayoutView} from '../../components';
import Link from 'next/link';
import {Image} from '@chakra-ui/react';

const Refund = () => {
  const router = useRouter();

  const data = useMemo(() => totalPurchaseData, []);

  const columns = useMemo(
    () => [
      // {Header: 'No.', accessor: 'no'},
      {Header: 'Image', accessor: 'image'},
      {Header: 'Name', accessor: 'name'},
      {Header: 'Amount', accessor: 'amount'},
      {Header: 'Listing Name', accessor: 'listingName'},
      {Header: 'Note', accessor: 'note'},
      {Header: 'Date', accessor: 'date'},
    ],
    []
  );

  const tableInstance = useTable({columns, data});

  const {getTableProps, getTableBodyProps, headerGroups, rows, prepareRow} = tableInstance;

  return (
    <LayoutView>
      <Head>
        <title>Matador | Refund</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="theme-color" content="#191919" />
        <Link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="relative">
        <main className="px-16 text-[#333]">
          <div
            className="cursor-pointer flex flex-row items-center"
            onClick={() => router.back(-1)}
          >
            <div className="w-12 h-12 rounded-full bg-[#ddd] justify-center items-center flex mr-1">
              <FontAwesomeIcon icon={faAngleLeft} className="w-6 h-6" />
            </div>
            <div className="font-medium text-lg">Back</div>
          </div>
          <div className="flex flex-row justify-between items-center my-2">
            <div className="font-medium text-lg my-4">Refund</div>
            <div className="p-2 rounded-md border border-[#4545FE] text-[#4545FE] flex flex-row items-center">
              <FontAwesomeIcon icon={faDownload} className="w-4 mx-2 h-4" />
              Download Report
              <FontAwesomeIcon icon={faCaretDown} className="w-4 mx-2 h-4" />
            </div>
          </div>

          <table className="w-full" {...getTableProps()}>
            <thead>
              {headerGroups.map((headerGroup, indx) => (
                <tr
                  key={indx}
                  className="w-full flex flex-row justify-between items-center my-2 py-2 shadow-sm"
                  {...headerGroup.getHeaderGroupProps()}
                >
                  {headerGroup.headers.map((column, idx) => {
                    if (column.Header === 'Note')
                      return (
                        <th key={idx} {...column.getHeaderProps({width: '25%'})}>
                          {column.render('Header')}
                        </th>
                      );
                    else
                      return (
                        <th key={idx} {...column.getHeaderProps({width: 'auto'})}>
                          {column.render('Header')}
                        </th>
                      );
                  })}
                </tr>
              ))}
            </thead>
            <tbody {...getTableBodyProps()}>
              {rows.map((row, indx) => {
                prepareRow(row);
                return (
                  <tr
                    key={indx}
                    className="w-full flex flex-row justify-between items-center my-2 py-2 shadow-sm"
                    {...row.getRowProps()}
                  >
                    {row.cells.map((cell, idx) => {
                      if (cell.column.Header === 'Note')
                        return (
                          <td key={idx} {...cell.getCellProps({width: '25%'})}>
                            {cell.render('Cell')}
                          </td>
                        );
                      else if (cell.column.Header === 'Image')
                        return (
                          <td key={idx} {...cell.getCellProps()}>
                            <Image alt="" className="w-8 h-8 rounded-full" src={cell.value.src} />
                          </td>
                        );
                      else
                        return (
                          <td key={idx} {...cell.getCellProps({width: 'auto'})}>
                            {cell.render('Cell')}
                          </td>
                        );
                    })}
                  </tr>
                );
              })}
            </tbody>
          </table>

          <div className="w-full flex flex-row items-center justify-end my-8">
            {/* <div className='mr-2'>Showing 10 of 120</div> */}
            <div className="cursor-pointer w-10 h-10 rounded-full bg-[#eee] justify-center items-center flex mr-2">
              <FontAwesomeIcon icon={faAngleLeft} className="w-4 h-4" />
            </div>
            <div className="w-8 h-8 justify-center items-center flex mr-2 border rounded-lg border-[#ccc]">
              {' '}
              1
            </div>
            <div className="cursor-pointer w-10 h-10 rounded-full bg-[#ddd] justify-center items-center flex">
              <FontAwesomeIcon icon={faAngleRight} className="w-4 h-4" />
            </div>
            <div className="w-8 h-8 justify-center items-center flex rounded-lg"> 10</div>
          </div>
        </main>
      </div>
    </LayoutView>
  );
};

export default Refund;
