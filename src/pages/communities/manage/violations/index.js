import SearchIcon from '@/components/assets/searchIcon';
import MatadorCustomTable from '@/components/common/Table';
import {LayoutView} from '@/components/index';
import ViolationOverviewHeader from '@/components/violations/violationOverviewHeader';
import {themeStyles} from '../../../../theme';
import {Box, Flex, Heading, HStack, Image} from '@chakra-ui/react';
import {demoviolationTableData} from 'constants/DEMODATA/violations';
import Head from 'next/head';
import {useRouter} from 'next/router';
import {VIOLATION_COLUMN} from 'pages/residents/customer_overview/CustomersTable/Table/violationCOLUMN';
import React, {useMemo} from 'react';
import {useSmallerLaptopsBreakpoint} from 'ui-lib';
import DownloadCsv from 'ui-lib/ui-lib.components/Button/downloadCsv';
import backArrow from '/src/images/icons/back-arrow.png';
import ViolationFilter from './violationfilter';

const limit = 10;
const Violations = () => {
  const isSmallerLaptop = useSmallerLaptopsBreakpoint();

  const router = useRouter();

  const routeQueries = router.query;
  const currentPage = routeQueries?.page ?? '1';

  const violations =
    demoviolationTableData?.[`page${currentPage}`] ?? demoviolationTableData?.[`1`];

  const handlePagination = direction => {
    if (direction === 'next') {
      const defaultQuery = {
        page: `${routeQueries?.page ? ~~routeQueries.page + 1 : 2}`,
        limit,
      };

      const mergedQuery = {
        ...router.query,
        ...defaultQuery,
      };
      router.push({
        pathname: router.pathname,
        query: mergedQuery,
      });
    }
    if (direction === 'prev') {
      const defaultQuery = {
        page: `${routeQueries?.page ? ~~routeQueries.page - 1 : 1}`,
        limit,
      };

      const mergedQuery = {
        ...router.query,
        ...defaultQuery,
      };
      router.push({
        pathname: router.pathname,
        query: mergedQuery,
      });
    }
  };
  const number_of_pages = 4;
  //   Math.ceil(~~customers?.data?.data?.count / ~~limit);

  const columns = useMemo(() => VIOLATION_COLUMN, []);
  return (
    <Box w="full" minH="100vh" bg="#FAFAFA" h={isSmallerLaptop ? '60vh' : ''}>
      <Head>
        <title>Essex | Violations</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="theme-color" content="#191919" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="shortcut icon" href="/favicon.ico" />
      </Head>
      <LayoutView
        px={{base: '0px', xl: '30px'}}
        tabPanelStyle={{pb: '0px'}}
        pb="0px"
        activePage="violations"
      >
        <Box
          // mt="clamp(-100vh, -82vh, calc(-100vh + 120px))"
          mt="clamp(52px,calc(11.4vh + 40px),96px)"
          px={{base: '0px', xl: '30px'}}
          maxW="full"
          w="full"
          mx="auto"

          // className="main-app"
        >
          <HStack
            zIndex={1000}
            position="relative"
            onClick={() => router.back(-1)}
            cursor={'pointer'}
            mb='32px'
          >
            <Image mr={2} boxSize="50px" alt="back_arrow" src={backArrow.src} />
            <Heading {...themeStyles.textStyles.h3}>Oak Ridge Violations</Heading>
          </HStack>
          <ViolationOverviewHeader />
          <Flex mb="32px" w="full" justify="end" gap="24px">
            <Flex
              h="36px"
              w="36px"
              justifyContent="center"
              border="0.5px solid #E4E4E7"
              alignItems="center"
              borderRadius="8.12px"
              bg="#ffffff"
            >
              <Box boxSize="36px">
                <DownloadCsv data={[]} />
              </Box>
            </Flex>
            <ViolationFilter />
          </Flex>
          <MatadorCustomTable
            minW="full"
            forMemo={[router]}
            forLimit={[limit, router]}
            headerSpace="evenly"
            COLUMNS={columns}
            number_of_pages={number_of_pages}
            handlePagination={handlePagination}
            DATA={violations}
            isManageAgentEmpty="No violation has been found yet"
          />
        </Box>
      </LayoutView>
    </Box>
  );
};

export default Violations;
