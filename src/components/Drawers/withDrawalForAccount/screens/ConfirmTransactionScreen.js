import {Button, Stack, Text, VStack, useToast} from '@chakra-ui/react';
import {useMutation} from '@tanstack/react-query';
import {OTPInput} from 'chakra-otp-input';
import React from 'react';
import {useState} from 'react';
import {BaseURL_ONE} from '../../../../constants/routes';
import axios from 'utils/axiosInstance';
import {toastForError} from '../../../../utils/toastForErrors';
import {Auth2FA} from '../../../../apis/settings';

export const ConfirmTransactionScreen = ({withdrawalObj, handleScreen, mutation}) => {
  const toast = useToast();
  const [twoFaOtp, setTwoFaOtp] = useState(null);
  const mutationForVerification = useMutation(
    formData => {
      return Auth2FA(formData);
    },
    {
      onSuccess: res => {
        handleScreen('processingToSuccess');
        mutation.mutate(withdrawalObj);
      },
      onError: err => {
        console.log('herere', err);
        toastForError(err, true, toast);
      },
    }
  );

  const handleVerify = () => {
    console.log('verify');
    return mutationForVerification.mutate({code: twoFaOtp});
  };

  return (
    <VStack pl="19px" pr="18px">
      <Text fontSize="12px" fontWeight="300" w="full" textAlign="start" color="#3D3D3D">
        Enter the 6-digit verification code generated by your Authenticator app to proceed.
      </Text>
      <OTPInput
        w="49.645px"
        h="45.132px"
        value={twoFaOtp}
        type="number"
        noInputs={6}
        bg="#E5E5E5"
        boxShadow="none"
        color="#333"
        fontSize="28.884px"
        fontWeight="300"
        borderRadius="8px"
        onChange={value => setTwoFaOtp(value)}
      />
      <Button
        mt="42.0vh"
        borderRadius="72px"
        bg="#3D3D3D"
        color="#fff"
        _hover={{opacity: 1}}
        w="full"
        fontSize="14px"
        fontWeight="400"
        isDisabled={twoFaOtp?.length != 6}
        onClick={handleVerify}
        isLoading={mutation.isLoading || mutationForVerification.isLoading}
      >
        Proceed
      </Button>
    </VStack>
  );
};

export default ConfirmTransactionScreen;
